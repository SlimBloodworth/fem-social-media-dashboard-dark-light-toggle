{"version":3,"sources":["script.js"],"names":["darkTheme","document","getElementById","lightTheme","setDarkMode","querySelector","classList","localStorage","setItem","setLightMode","colorModeFromLocalStorage","getItem","colorModeFromPreferences","window","matchMedia","matches","loadAndUpdateColor","click","radioButtons","querySelectorAll","forEach","button","addEventListener","event","checked"],"mappings":"AAAA,aACA,IAAMA,UAAYC,SAASC,eAAe,QACpCC,WAAaF,SAASC,eAAe,SAErCE,YAAc,WAChBH,SAASI,cAAc,QAAQC,UAAY,OAC3CC,aAAaC,QAAQ,YAAa,SAGhCC,aAAe,WACjBR,SAASI,cAAc,QAAQC,UAAY,QAC3CC,aAAaC,QAAQ,YAAa,UAGhCE,0BAA4B,WAC9B,OAAOH,aAAaI,QAAQ,cAG1BC,yBAA2B,WAC7B,OAAOC,OAAOC,WAAW,gCAAgCC,QACrD,OACA,SAGFC,mBAAqB,WAGd,SADKN,6BAA+BE,4BAC3BZ,UAAUiB,QAAUd,WAAWc,SAI/CC,aAAejB,SAASkB,iBAAiB,0BAC/CD,aAAaE,SAAQ,SAAAC,GACjBA,EAAOC,iBAAiB,SAAS,SAACC,GAC9BvB,UAAUwB,QAAUpB,cAAgBK,qBAK5CI,OAAOC,WAAW,gCACbQ,iBAAiB,UAAU,SAACC,GACzBA,EAAMR,QAAUf,UAAUiB,QAAUd,WAAWc,WAIvDD","file":"script.js","sourcesContent":["//console.log();\r\nconst darkTheme = document.getElementById('dark');\r\nconst lightTheme = document.getElementById('light');\r\n\r\nconst setDarkMode = () => {\r\n    document.querySelector('body').classList = 'dark';\r\n    localStorage.setItem('colorMode', 'dark');\r\n};\r\n\r\nconst setLightMode = () => {\r\n    document.querySelector('body').classList = 'light';\r\n    localStorage.setItem('colorMode', 'light');\r\n};\r\n\r\nconst colorModeFromLocalStorage = () => {\r\n    return localStorage.getItem('colorMode');\r\n};\r\n\r\nconst colorModeFromPreferences = () => {\r\n    return window.matchMedia('(prefers-color-scheme: dark)').matches ?\r\n        'dark' :\r\n        'light' // If preference is set or does not match anything (light is default)\r\n};\r\n\r\nconst loadAndUpdateColor = () => {\r\n    // local storage has precedence over the prefers-color-scheme\r\n    const color = colorModeFromLocalStorage() || colorModeFromPreferences();\r\n    color == 'dark' ? darkTheme.click() : lightTheme.click();\r\n};\r\n\r\n// when the inputs are clicked, check which radio button is checked and changes the color\r\nconst radioButtons = document.querySelectorAll('.toggle__wrapper input');\r\nradioButtons.forEach(button => {\r\n    button.addEventListener('click', (event) => {\r\n        darkTheme.checked ? setDarkMode() : setLightMode();\r\n    });\r\n});\r\n\r\n// when the prefers-color-scheme changes, this event reflects the media query, if it matches, the new color is dark, else it is light\r\nwindow.matchMedia('(prefers-color-scheme: dark)')\r\n    .addEventListener('change', (event) => {\r\n        event.matches ? darkTheme.click() : lightTheme.click();\r\n    });\r\n\r\n// Load the right color on startup - localStorage has precedence\r\nloadAndUpdateColor();"]}